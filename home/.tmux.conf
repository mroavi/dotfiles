# Change prefix
#unbind C-b
#set-option -g prefix C-a
#bind-key C-a send-prefix

# ---------------------------------------------------------------------------
# Source: https://gist.github.com/spicycode/1229612
# ---------------------------------------------------------------------------

# 0 is too far from ` ;)
set -g base-index 1

# Enable 256-colors
set -g default-terminal 'xterm-256color'
set -ga terminal-overrides ',*256col*:Tc'

# Set window notifications
set -g monitor-activity on
set -g visual-activity off

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Allows for faster key repetition
set -g repeat-time 0

# Toggle synchronization
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# Increase history limit
set -g history-limit 10000

# Set vi key-bindings
# pressing Ctrl+B and then [ will enter vi copy mode
set -g status-keys vi
set -g mode-keys vi

# Yank to tmux buffer AND clipboard in vi mode
# https://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/
bind p paste-buffer
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind -T copy-mode-vi 'r' send -X rectangle-toggle
bind -T copy-mode-vi  y send -X copy-pipe-and-cancel "xclip -sel clip -i"

# Mouse
# https://unix.stackexchange.com/questions/348913/copy-selection-to-a-clipboard-in-tmux
set -g mouse on
set -s set-clipboard off
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i"

# https://stackoverflow.com/questions/31404140/can-i-use-double-click-to-select-and-copy-in-tmux
# Double LMB Select & Copy (Word)
bind-key -T copy-mode-vi DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word-no-clear \; \
    run-shell "sleep .15s" \; \
    send-keys -X copy-pipe-and-cancel "xclip -in -sel clip"
bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    run-shell "sleep .15s" \; \
    send-keys -X copy-pipe-and-cancel "xclip -in -sel clip"

# Triple LMB Select & Copy (Line)
bind-key -T copy-mode-vi TripleClick1Pane \
    select-pane \; \
    send-keys -X select-line \; \
    run-shell "sleep .15s" \; \
    send-keys -X copy-pipe-and-cancel "xclip -in -sel clip"
bind-key -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    run-shell "sleep .15s" \; \
    send-keys -X copy-pipe-and-cancel "xclip -in -sel clip"

# Forward Shift+{key} to the terminal
# https://superuser.com/questions/401926/how-to-get-shiftarrows-and-ctrlarrows-working-in-vim-in-tmux
set -gw xterm-keys on

# Enable FocusGained and FocusLost autocommand events in terminal vim
# https://github.com/tmux-plugins/vim-tmux-focus-events
set -g focus-events on

# Flash message in status bar instead of making a bell sound:
set -g visual-bell on

# ----------------------------
# Windows
# ----------------------------

# New window with Ctrl+n
bind -n C-M-n new-window

# Ctrl-(Shift)-Tab to switch windows
bind -n C-S-Tab previous-window
bind -n C-Tab   next-window

# Use Alt-{h.l} keys to switch between windows 
bind -n M-h previous-window
bind -n M-l next-window

# No delay for escape key press
set -sg escape-time 0

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# Create a session if one does not already exist when running "tmux attach" 
# https://unix.stackexchange.com/questions/103898/how-to-start-tmux-with-attach-if-a-session-exists
new-session -n $HOST

# -----------------------------
# Panes
# -----------------------------

# Use Ctrl+Alt+{h,j,k,l} to resize the pane by 1
bind -n C-M-j resize-pane -D
bind -n C-M-k resize-pane -U
bind -n C-M-h resize-pane -L
bind -n C-M-l resize-pane -R

# Use <prefix> Shift+{h,j,k,l} to resize the pane by 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind H resize-pane -L 5
bind L resize-pane -R 5

# Split tmux window (hack: we expect `Ctrl+Shift+1` and `Ctrl+Shift+.` X codes from the terminal)
bind -n C-S-1 split-window -v -c "#{pane_current_path}"
bind -n C-S-. split-window -h -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits and FZF
# https://github.com/christoomey/vim-tmux-navigator
# https://github.com/gfontenot/dotfiles/blob/master/tmux.conf#L94-L104

forward_programs="view|n?vim?|fzf"

should_forward="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?($forward_programs)(diff)?$'"

# Vim split navigation if Vim is focused, otherwise tmux pane navigation
bind-key -n 'C-h' if-shell "$should_forward" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$should_forward" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$should_forward" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$should_forward" 'send-keys C-l'  'select-pane -R'

## Next and previous window in Vim if focused, otherwise in tmux
bind-key -n 'C-Tab' if-shell "$should_forward" 'send-keys C-Tab' 'next-window'
bind-key -n 'C-S-Tab' if-shell "$should_forward" 'send-keys C-S-Tab' 'previous-window'

# Forward Ctrl+w to Vim if focused, otherwise kill tmux window 
bind-key -n 'C-w' if-shell "$should_forward" 'send-keys C-w'  'confirm-before -p "kill-window #W? (y/n)" kill-window'

# Forward Ctrl+Shift+w to Vim if focused, otherwise kill tmux pane (hack: Ctrl+Shift+0)
bind-key -n 'C-S-0' if-shell "$should_forward" 'send-keys C-S-0' 'kill-pane'

# Enable the mappings above in vi copy mode (Ctrl+b [) as well  
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-Tab' next-window
bind-key -T copy-mode-vi 'C-S-Tab' previous-window
bind-key -T copy-mode-vi 'C-w' confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key -T copy-mode-vi 'C-S-0' kill-pane

# Use <prefix> C-l to clear the screen
bind C-l send-keys 'C-l'

# Reload tmux config
bind r source-file ~/.tmux.conf \; display "Reloaded!"


# ==================================== 
# PLUGINS 
# ==================================== 

# Automatically install tpm on a new machine
if "test ! -d ~/.tmux/plugins/tpm" \
       "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# tmux-resurrect
# Save/restore sessions
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-processes 'vifm'

# status bar position
set -g status-position top




# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
