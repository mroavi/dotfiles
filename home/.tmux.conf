# Change prefix
#unbind C-b
#set-option -g prefix C-a
#bind-key C-a send-prefix

# Press <prefix> r to make the changes take effect

# ---------------------------------------------------------------------------
# Source: https://gist.github.com/spicycode/1229612
# ---------------------------------------------------------------------------

# 0 is too far from ` ;)
set -g base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000

# Pressing Ctrl+B and then [ will enter vi copy mode
setw -g mode-keys vi

# Introduce vim visual mode + yank to vi
# source: https://sanctum.geek.nz/arabesque/vi-mode-in-tmux/
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

set -g mouse on
setw -g monitor-activity on
set-option -gw xterm-keys on

# Enable FocusGained and FocusLost autocommand events in terminal vim
# https://github.com/tmux-plugins/vim-tmux-focus-events
set -g focus-events on

# ----------------------------
# Windows
# ----------------------------

# New window with Ctrl+n
bind -n C-n new-window

# Shift arrow to switch windows 
bind -n S-Left  previous-window
bind -n S-Right next-window

# No delay for escape key press
set -sg escape-time 0

# -----------------------------
# Panes
# -----------------------------

# Use <prefix> Shift+{h,j,k,l} to resize the pane by 5
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

# Use <prefix> Alt+{h,j,k,l} to resize the pane by 1 (Not working)
bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Split tmux window (hack: we do this when we receive Ctrl+Shift+1 from xterm)
bind-key -n C-S-1 split-window -v

# Split tmux window (hack: we do this when we receive Ctrl+Shift+. from xterm)
bind-key -n C-S-. split-window -h

# https://www.bugsnag.com/blog/tmux-and-vim 
# (TODO: integrate FZF Ctrl+p autocompletion as shown in the link above)
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Vim split navigation if Vim is focused, otherwise tmux pane navigation
    bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
    bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
    bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
    bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# Next and previous window in Vim if focused, otherwise in tmux
    bind-key -n 'C-Tab' if-shell "$is_vim" 'send-keys C-Tab' 'next-window'
    bind-key -n 'C-S-Tab' if-shell "$is_vim" 'send-keys C-S-Tab' 'previous-window'

# Forward Ctrl+w to Vim if focused, otherwise kill tmux window 
    bind-key -n 'C-w' if-shell "$is_vim" 'send-keys C-w'  'kill-window'

# Forward Ctrl+Shift+w to Vim if focused, otherwise kill tmux pane (hack: Ctrl+Shift+0)
    bind-key -n 'C-S-0' if-shell "$is_vim" 'send-keys C-S-0' 'kill-pane'

    tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
    if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
        "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
    if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
        "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

    bind-key -T copy-mode-vi 'C-h' select-pane -L
    bind-key -T copy-mode-vi 'C-j' select-pane -D
    bind-key -T copy-mode-vi 'C-k' select-pane -U
    bind-key -T copy-mode-vi 'C-l' select-pane -R
    bind-key -T copy-mode-vi 'C-\' select-pane -l
    bind-key -T copy-mode-vi 'C-Tab' next-window
    bind-key -T copy-mode-vi 'C-S-Tab' previous-window
    bind-key -T copy-mode-vi 'C-w' kill-window
    bind-key -T copy-mode-vi 'C-S-0' kill-pane

# Use <prefix> C-l to clear the screen
bind C-l send-keys 'C-l'

# Reload tmux config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# ==================================== 
# TMUX STATUS BAR THEME
# ==================================== 

run-shell "tmux source-file ~/.tmux.solarized-dark.theme"

    
# Simple option

#set -g status-bg black
#set -g status-fg white
#set -g window-status-current-bg white
#set -g window-status-current-fg black
#set -g window-status-current-attr bold
#set -g status-interval 60
#set -g status-left-length 30
#set -g status-left '#[fg=green](#S) #(whoami) '
#set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

# ==================================== 
# PLUGINS 
# ==================================== 

# Automatically install tpm on a new machine
if "test ! -d ~/.tmux/plugins/tpm" \
       "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# tmux-yank
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_selection_mouse 'primary' # or 'clipboard' or 'primary' or 'secondary'

# tmux-resurrect
# Save/restore sessions
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
