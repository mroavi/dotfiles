# Change prefix
#unbind C-b
#set-option -g prefix C-a
#bind-key C-a send-prefix

# Press <prefix> r to make the changes take effect

# ---------------------------------------------------------------------------
# Source: https://gist.github.com/spicycode/1229612
# ---------------------------------------------------------------------------

# 0 is too far from ` ;)
set -g base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
set -g mouse on
setw -g monitor-activity on
set-option -gw xterm-keys on

# ----------------------------
# Windows
# ----------------------------

# New window with Ctrl+n
bind -n C-n new-window

# Close window with Ctrl+q (conflicts with Vim)
#bind -n C-w kill-window
#bind -n C-w confirm-before -p "kill-window #W? (y/n)" kill-window

# Shift arrow to switch windows 
bind -n S-Left  previous-window
bind -n S-Right next-window

# Ctrl (shift) tab to change windows (conflicts with Vim)
#bind-key -n C-Tab next-window
#bind-key -n C-S-Tab previous-window

# No delay for escape key press
set -sg escape-time 0

# -----------------------------
# Panes
# -----------------------------

# Use <prefix> v/s for vertical/horizontal panes
bind-key -n s-s split-window -h
bind-key -n v-v split-window -v

# Use <prefix> Shift+{h,j,k,l} to resize the pane by 5
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

# Use <prefix> Alt+{h,j,k,l} to resize the pane by 1 (Not working)
bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# https://www.bugsnag.com/blog/tmux-and-vim
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
    bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
    bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
    bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# Next and previous window in Vim if focused, otherwise in tmux
    bind-key -n 'C-Tab' if-shell "$is_vim" 'send-keys C-Tab' 'next-window'
    bind-key -n 'C-S-Tab' if-shell "$is_vim" 'send-keys C-S-Tab' 'previous-window'
# Forward Ctrl+w to Vim if focused, otherwise kill tmux window 
    bind-key -n 'C-w' if-shell "$is_vim" 'send-keys C-w'  'kill-window'
# Forward Ctrl+Shift+w to Vim if focused, otherwise kill tmux pane (hack: Ctrl+Shift+0)
    bind-key -n 'C-S-0' if-shell "$is_vim" 'send-keys C-S-0' 'kill-pane'
# Forward Ctrl+Shift+s to Vim if focused, otherwise split tmux window (hack: Ctrl+Shift+1)
    bind-key -n 'C-S-1' if-shell "$is_vim" 'send-keys C-S-1' 'split-window -h'
# Forward Ctrl+Shift+v to Vim if focused, otherwise split tmux window (hack: Ctrl+Shift+.)
    bind-key -n 'C-S-.' if-shell "$is_vim" 'send-keys C-S-.' 'split-window -v'
    tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
    tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
    tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
    if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
        "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
    if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
        "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

    bind-key -T copy-mode-vi 'C-h' select-pane -L
    bind-key -T copy-mode-vi 'C-j' select-pane -D
    bind-key -T copy-mode-vi 'C-k' select-pane -U
    bind-key -T copy-mode-vi 'C-l' select-pane -R
    bind-key -T copy-mode-vi 'C-\' select-pane -l
    bind-key -T copy-mode-vi 'C-Tab' next-window
    bind-key -T copy-mode-vi 'C-S-Tab' previous-window
    bind-key -T copy-mode-vi 'C-w' kill-window
    bind-key -T copy-mode-vi 'C-S-0' kill-pane
    bind-key -T copy-mode-vi 'C-S-1' split-window -h
    bind-key -T copy-mode-vi 'C-S-.' split-window -v

# Use <prefix> C-l to clear the screen
bind C-l send-keys 'C-l'

# Reload tmux config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# ------------------------------------
# THEME
# ------------------------------------
set -g status-bg black
set -g status-fg white
set -g window-status-current-bg white
set -g window-status-current-fg black
set -g window-status-current-attr bold
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=green](#S) #(whoami) '
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

