#!/bin/bash

# Save current directory
currentdir="$PWD"

# -----------------------------------------------------------------------------------------
echo "Installing stow..."

if [ "$SSH_CONNECTION" ]; then
  FILE=$HOME/local/bin/stow
  if [ -f "$FILE" ]; then
    echo "stow is already installed"
  else
    # See INSTALL.md in root dir
    # TODO: check if this works
    mkdir -p ~/repos && cd ~/repos
    git clone https://git.savannah.gnu.org/git/stow.git
    cd stow
    autoreconf -iv
    ./configure --prefix=$HOME/local
    make install
  fi
else
  sudo apt-get install stow
fi

# -----------------------------------------------------------------------------------------
echo "Installing nvim..."

# Local installation
# https://github.com/neovim/neovim/wiki/Installing-Neovim#appimage-universal-linux-package
if [ "$SSH_CONNECTION" ]; then
  FILE=$HOME/local/bin/nvim
  if [ -f "$FILE" ]; then
    echo "nvim is already installed"
  else
    mkdir -p ~/local/bin && cd ~/local/bin
#    curl -LO https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
  curl -LO https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage
    chmod u+x nvim.appimage
    mv nvim.appimage nvim
    pip3 install pynvim
  fi
else
  FILE=$HOME/.local/bin/nvim
  if [ -f "$FILE" ]; then
    echo "nvim is already installed"
  else
    mkdir -p ~/.local/bin && cd ~/.local/bin
#    curl -LO https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
  curl -LO https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage
    chmod u+x nvim.appimage
    mv nvim.appimage nvim
    pip3 install pynvim
  fi
fi

# -----------------------------------------------------------------------------------------
echo "Installing vim-plug for nvim..."

sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

# -----------------------------------------------------------------------------------------
echo "Installing neovim plugins..."

# https://github.com/junegunn/vim-plug/wiki/tips#install-plugins-on-the-command-line
nvim -es -u ~/dotfiles/nvim/.config/nvim/init.vim -i NONE -c "PlugInstall" -c "qa"

# -----------------------------------------------------------------------------------------
echo "Installing zsh..."

if [ "$SSH_CONNECTION" ]; then
  # Build locally (needed when root access is not available)
  # https://stackoverflow.com/a/15293565/1706778
  FILE=$HOME/local/bin/zsh
  if [ -f "$FILE" ]; then
    echo "zsh is already installed"
  else
    mkdir -p ~/downloads && cd downloads
    wget -O zsh.tar.xz https://sourceforge.net/projects/zsh/files/latest/download
    mkdir zsh && unxz zsh.tar.xz && tar -xvf zsh.tar -C zsh --strip-components 1
    cd zsh
    ./configure --prefix=$HOME/local
    make
    make install
  fi
else
  sudo apt install zsh
fi

# -----------------------------------------------------------------------------------------
echo "Installing oh-my-zsh..."

sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

# -----------------------------------------------------------------------------------------
echo "Installing Powerlevel10k (or pulling if repo already exists)..."

# Add powerlevel10k to the list of Oh My Zsh themes.
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k 2> /dev/null || git -C $ZSH_CUSTOM/themes/powerlevel10k pull

# -----------------------------------------------------------------------------------------
echo "Installing Fonts..."
# To see installed mono fonts:
# fc-list :scalable=true:spacing=mono: family

mkdir -p ~/.local/share/fonts && cd ~/.local/share/fonts

# Hack Nerd Font
# https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts
filepath=Hack-for-Powerline-Nerd-Font-regular-complete.ttf
[ -f $filepath ] || curl -fLo "$filepath" https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/Hack/Regular/complete/Hack%20Regular%20Nerd%20Font%20Complete.ttf
filepath=Hack-for-Powerline-Nerd-Font-bold-complete.ttf
[ -f $filepath ] || curl -fLo "$filepath" https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/Hack/Bold/complete/Hack%20Bold%20Nerd%20Font%20Complete.ttf
filepath=Hack-for-Powerline-Nerd-Font-italic-complete.ttf
[ -f $filepath ] || curl -fLo "$filepath" https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/Hack/Italic/complete/Hack%20Italic%20Nerd%20Font%20Complete.ttf
filepath=Hack-for-Powerline-Nerd-Font-bold-italic-complete.ttf
[ -f $filepath ] || curl -fLo "$filepath" https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/Hack/BoldItalic/complete/Hack%20Bold%20Italic%20Nerd%20Font%20Complete.ttf

# Awesome Terminal font
# https://github.com/gabrielelana/awesome-terminal-fonts/tree/patching-strategy/patched
filepath=Droid-Sans-Mono-Awesome.ttf
[ -f $filepath ] || curl -fLo "$filepath" https://github.com/gabrielelana/awesome-terminal-fonts/raw/patching-strategy/patched/Droid%2BSans%2BMono%2BAwesome.ttf

# -----------------------------------------------------------------------------------------
#echo "Installing clangd and YouCompleteMe..."

#sudo apt-get install clangd-9
#sudo apt install build-essential cmake python3-dev
##cd ~/.vim/plugged/YouCompleteMe
##python3 install.py --clangd-completer

# -----------------------------------------------------------------------------------------
# https://github.com/BurntSushi/ripgrep#installation
echo "Installing ripgrep..."

# Install if not already installed
# https://stackoverflow.com/a/54239534/1706778
if [ "$SSH_CONNECTION" ]; then
  # TODO: install without root access
  echo TODO
else
  mkdir -p ~/downloads && cd ~/downloads
  pkg='ripgrep'
  if ! dpkg -s $pkg >/dev/null 2>&1; then
    sudo curl -LO https://github.com/BurntSushi/ripgrep/releases/download/11.0.2/ripgrep_11.0.2_amd64.deb
    sudo dpkg -i ripgrep_11.0.2_amd64.deb
  else
    echo "$pkg is already installed"
  fi
fi

# -----------------------------------------------------------------------------------------
# https://computingforgeeks.com/bat-cat-command-with-syntax-highlighting-and-git-integration/
echo "Installing bat..."
#sudo apt-get install wget

if [ "$SSH_CONNECTION" ]; then
  # TODO: allow installing without root access
  # SEE: https://github.com/vifm/vifm/blob/master/INSTALL
  echo TODO
else
  # https://stackoverflow.com/a/54239534/1706778
  pkg='bat'
  if ! dpkg -s $pkg >/dev/null 2>&1; then
    export VER="0.13.0"
    wget https://github.com/sharkdp/bat/releases/download/v${VER}/bat_${VER}_amd64.deb
    sudo dpkg -i bat_${VER}_amd64.deb
  else
    echo "$pkg is already installed"
  fi
fi

# -----------------------------------------------------------------------------------------
# https://github.com/chriskempson/base16-shell
echo "Installing base16-shell..."

# git pull if present, otherwise clone
LOCAL_REPO=~/.config/base16-shell
REPO_URL=https://github.com/chriskempson/base16-shell.git
git -C $LOCAL_REPO pull || git clone $REPO_URL $LOCAL_REPO
# TODO: can't get the following line to work (no .vimrc_background is generated)
#/bin/bash $HOME/.config/base16-shell/scripts/base16-oceanicnext.sh

## -----------------------------------------------------------------------------------------
# https://github.com/wting/autojump
echo "Installing autojump..."

FILE=$HOME/.autojump/bin/autojump
if [ -f "$FILE" ]; then
  echo "autojump is already installed"
else
  mkdir -p ~/downloads && cd ~/downloads
  [ -f ./autojump ] || git clone git://github.com/wting/autojump.git
  cd autojump
  ./install.py
fi

# -----------------------------------------------------------------------------------------
echo "Installing nnn..."

if [ "$SSH_CONNECTION" ]; then
  FILE=$HOME/local/bin/nnn
  if [ -f "$FILE" ]; then
    echo "nnn is already installed"
  else
    # See INSTALL.md in root dir
    mkdir -p ~/repos && cd ~/repos
    git clone git@github.com:jarun/nnn.git
    cd nnn
    PREFIX=$HOME/local make strip install
  fi
else
  sudo apt-get install nnn
fi

# -----------------------------------------------------------------------------------------
# Return to original directory
cd "$currentdir"

# TODO: install xclip
