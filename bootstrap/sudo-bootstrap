#!/bin/bash

# Save current directory
currentdir="$PWD"

sudo -v # give sudo privileges ahead of time, so that we hopefully only have to enter a password once

# Ensure these dirs exist
mkdir -p ~/.local
mkdir -p ~/downloads
mkdir -p ~/repos

# yay
FILE=/usr/bin/yay
if [ -f "$FILE" ]; then
  echo " yay is already installed"
else
  echo "Installing yay..."
  sudo pacman -S --needed git base-devel
  LOCAL_REPO=$HOME/repos/yay
  REPO_URL=https://aur.archlinux.org/yay.git
  git clone "$REPO_URL" "$LOCAL_REPO" 2> /dev/null || git -C "$LOCAL_REPO" pull
  cd $LOCAL_REPO
  makepkg -si
fi

pac_pkgs=(
          wget
          zip
          unzip
          openssh
          xclip
          stow
          alacritty
          neovim
          dmenu
          thunar
          viewnior
          pavucontrol
          zsh
          zsh-autosuggestions
          zsh-syntax-highlighting
          ripgrep
          fasd
          diff-so-fancy
          z
          fd
          feh
          xbindkeys
          flameshot
          pipewire
          pipewire-audio
          pipewire-alsa
          pipewire-pulse
          bluez
          bluez-utils
          lxappearance
          okular
          dunst
          bottom
          arandr
          bash-language-server
          lua-language-server
          texlab
         )

yay_pkgs=(
          tmux
          lf
          vidir
          trash-cli
          brave-bin
          dropbox
          git-open
          ttf-font-awesome-4
          ttf-juliamono
          ttf-meslo-nerd
         )

sudo pacman   -S --needed ${pac_pkgs[@]}
yay           -S --needed ${yay_pkgs[@]}

# dwm
FILE=/usr/local/bin/dwm
if [ -f "$FILE" ]; then
  echo " dwm is already installed"
else
  echo "Installing dwm..."
  sudo pacman -S --needed xorg xorg-server xorg-xinit libx11 libxinerama libxft webkit2gtk
  LOCAL_REPO=$HOME/repos/dwm
  REPO_URL=https://github.com/mroavi/dwm.git
  git clone "$REPO_URL" "$LOCAL_REPO" 2> /dev/null || git -C "$LOCAL_REPO" pull
  cd $LOCAL_REPO
  sudo make clean install
fi

# slock
FILE=/usr/local/bin/slock
if [ -f "$FILE" ]; then
  echo " slock is already installed"
else
  echo "Installing slock..."
  LOCAL_REPO=$HOME/repos/slock
  REPO_URL=https://github.com/mroavi/slock.git
  git clone "$REPO_URL" "$LOCAL_REPO" 2> /dev/null || git -C "$LOCAL_REPO" pull
  cd $LOCAL_REPO
  git checkout mrv
  sudo make clean install
fi

# pure
echo "Installing pure..."
mkdir -p ~/.zsh
LOCAL_REPO=$HOME/.zsh/pure
REPO_URL=https://github.com/mroavi/pure.git
git clone "$REPO_URL" "$LOCAL_REPO" 2> /dev/null || git -C "$LOCAL_REPO" pull

# clangd
echo "Installing clangd..."
FILE=$HOME/.local/bin/clangd
if [ -f "$FILE" ]; then
  echo " clangd is already installed"
else
  VERSION="13.0.0"
  cd ~/downloads/
  filepath="clangd-linux-$VERSION.zip"
  [ -f $filepath ] || curl -fLo "$filepath" https://github.com/clangd/clangd/releases/download/$VERSION/clangd-linux-$VERSION.zip
  unzip "$filepath"
  cp clangd_$VERSION/bin/clangd $HOME/.local/bin
  cp -r clangd_$VERSION/lib/clang $HOME/.local/lib
fi

# julia
echo "Installing julia..."
FILE=$HOME/.local/bin/julia
if [ -e "$FILE" ]; then
  echo "  julia is already installed"
else
  bash -ci "$(curl -fsSL https://raw.githubusercontent.com/abelsiqueira/jill/main/jill.sh)"
fi

# # Make zsh the default shell
# chsh -s $(which zsh)

# Return to original directory
cd "$currentdir"
