#!/bin/bash

# Save current directory
currentdir="$PWD"

# Authorize sudo once to avoid repeated prompts
sudo -v 

# Ensure these dirs exist
mkdir -p ~/.local
mkdir -p ~/Downloads
mkdir -p ~/repos

# Generate an SSH key if not done already
KEY_PATH="$HOME/.ssh/id_ed25519"
if [ -f "$KEY_PATH" ]; then
    echo "SSH key already exists at $KEY_PATH"
else
    ssh-keygen -t ed25519 -C "mroavi@gmail.com"
    echo "SSH key generated and stored at $KEY_PATH"
fi

# Configure Git username and email
git config --global user.email "mroavi@gmail.com"
git config --global user.name "Martin Roa Villescas"

# Clone my notes repo
echo "Cloning notes repo..."
LOCAL_REPO=$HOME/notes
REPO_URL=git@github.com:mroavi/notes.git
git clone "$REPO_URL" "$LOCAL_REPO" 2> /dev/null || git -C "$LOCAL_REPO" pull

apt_pkgs_base=(
          dotnet-runtime-8.0
          dotnet-sdk-8.0
          build-essential
          wget
          curl
          zip
          unzip
          tar
          xclip
          stow
          #alacritty     # not available on Ubuntu 22.04 base repository
          python3
          python3-pip
          python3-venv
          python3-pynvim
          libfuse2
          npm             # required to install several neovim lsps
          zsh
          zsh-autosuggestions
          zsh-syntax-highlighting
          ripgrep
          fzf
          #delta
          fd-find
          fontconfig      # required to install meslo font family
          gnome-tweaks
          zoxide
         )


apt_pkgs_extra=(
          #openssh
          golang-go
          #dmenu
          #thunar
          #viewnior
          inkscape
          #gimp
          #pavucontrol
          #feh
          #xbindkeys
          #flameshot
          #pipewire
          #pipewire-audio
          #pipewire-alsa
          #pipewire-pulse
          #bluez
          #bluez-utils
          #xf86-input-libinput     # configure touchpad
          #lxappearance            # manage GTK themes
          #qt5ct                   # mange QT themes
          #kvantum
          #okular
          #dunst
          #bottom
          #arandr
          #pkgfile                 # find packages that hold a file (even if the package is not installed)
          #texlive-full            # NOTE: temporarily disabled due to high disk space usage
          #noto-fonts
          #noto-fonts-cjk
          #noto-fonts-emoji
          #noto-fonts-extra
         )

sudo apt install ${apt_pkgs_base[@]}
#sudo apt install ${apt_pkgs_extra[@]}

# pure
echo "Installing pure..."
mkdir -p ~/.zsh
LOCAL_REPO=$HOME/.zsh/pure
REPO_URL=https://github.com/mroavi/pure.git
git clone "$REPO_URL" "$LOCAL_REPO" 2> /dev/null || git -C "$LOCAL_REPO" pull

# meslo font family
FILE="$HOME/.local/share/fonts/Meslo LG L Bold Italic Nerd Font Complete Mono.ttf"
if [ -f "$FILE" ]; then
  echo " meslo font family is already installed"
else
  # Source: https://gist.github.com/incogbyte/373f37817742c53891a076391533fe6d
  cd ~
  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip
  mkdir -p .local/share/fonts
  unzip Meslo.zip -d .local/share/fonts
  cd .local/share/fonts
  rm *Windows*
  cd ~
  rm Meslo.zip
  fc-cache -fv
fi

# neovim
echo "Installing nvim..."
FILE=$HOME/.local/bin/nvim
if [ -f "$FILE" ]; then
  echo " nvim is already installed"
else
  mkdir -p ~/.local/bin && cd ~/.local/bin
  curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
  chmod u+x nvim.appimage
  mv nvim.appimage nvim
fi

# Install Brave browser
if ! command -v brave-browser &> /dev/null; then
  echo "Installing brave..."
  sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
  echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list
  sudo apt update
  sudo apt install -y brave-browser
  echo "Brave Browser installed successfully."
else
  echo "Brave Browser is already installed."
fi

# Alacritty (Alacritty is not available on Ubuntu 22.04 base repository)
echo "Checking if Alacritty is installed..."
if command -v alacritty &> /dev/null; then
  echo "Alacritty is already installed"
else
  echo "Installing Alacritty..."
  sudo apt install -y wget apt-transport-https gnupg2 software-properties-common
  sudo add-apt-repository ppa:aslatter/ppa
  sudo apt update
  sudo apt install -y alacritty
fi

# pyenv
curl https://pyenv.run | bash

# pokemon-colorscripts
echo "Installing pokemon-colorscripts..."
FILE=/usr/local/bin/pokemon-colorscripts
if [ -f "$FILE" ]; then
  echo " pokemon-colorscripts is already installed"
else
  LOCAL_REPO=~/Downloads/pokemon-colorscripts
  REPO_URL=https://gitlab.com/phoneybadger/pokemon-colorscripts.git
  cd $LOCAL_REPO
  sudo ./install.sh
fi

# julia (uses juliaup)
#echo "Installing julia..."
#curl -fsSL https://install.julialang.org | sh

# Ubuntu/Debian use `fdfind` to avoid conflicts with `fd`.
# Create a symlink for compatibility (fd is used by telescope and fzf).
sudo ln -sf $(which fdfind) /usr/local/bin/fd

# # Make zsh the default shell
# chsh -s $(which zsh)

# Return to original directory
cd "$currentdir"
