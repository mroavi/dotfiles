#!/bin/bash

# Save current directory
currentdir="$PWD"

sudo -v # give sudo privileges ahead of time, so that we hopefully only have to enter a password once

# Ensure these dirs exist
mkdir -p ~/.local
mkdir -p ~/Downloads
mkdir -p ~/repos

# yay
FILE=/usr/bin/yay
if [ -f "$FILE" ]; then
  echo " yay is already installed"
else
  echo "Installing yay..."
  sudo pacman -S --needed git base-devel
  LOCAL_REPO=$HOME/repos/yay
  REPO_URL=https://aur.archlinux.org/yay.git
  git clone "$REPO_URL" "$LOCAL_REPO" 2> /dev/null || git -C "$LOCAL_REPO" pull
  cd $LOCAL_REPO
  makepkg -si
fi

pac_pkgs=(
          alacritty
          arandr
          bluez
          bluez-utils
          bottom
          diff-so-fancy
          dmenu
          dotnet-runtime
          dotnet-sdk
          dunst
          fasd
          fd
          feh
          flameshot
          fzf
          gimp
          gnome-keyring
          go
          inkscape
          kvantum
          lxappearance            # manage GTK themes
          neovim
          noto-fonts
          noto-fonts-cjk
          noto-fonts-emoji
          noto-fonts-extra
          npm
          okular
          openssh
          pavucontrol
          picom
          pipewire
          pipewire-alsa
          pipewire-audio
          pipewire-pulse
          pkgfile                 # find packages that hold a file (even if the package is not installed)
          qt5ct                   # mange QT themes
          ripgrep
          sof-firmware            # see: https://wiki.archlinux.org/title/Advanced_Linux_Sound_Architecture#ALSA_firmware
          stow
          tar
          texlive-bibtexextra
          texlive-bin
          texlive-binextra
          texlive-core
          texlive-fontsextra
          texlive-fontutils       # needed by LyX
          texlive-latexextra
          texlive-luatex
          texlive-pictures
          texlive-plaingeneric    # contains 'listofitems.sty'
          texlive-science
          thunar
          unzip
          viewnior
          wget
          xbindkeys
          xclip
          xf86-input-libinput     # configure touchpad
          xournalpp               # handwritten notes
          z
          zip
          zsh
          zsh-autosuggestions
          zsh-syntax-highlighting
         )

yay_pkgs=(
          tmux
          lf
          vidir
          trash-cli
          brave-bin
          dropbox
          git-open
          ttf-font-awesome-4
          ttf-juliamono
          ttf-meslo-nerd
          ttf-symbola
          catppuccin-gtk-theme-mocha
          kvantum-theme-catppuccin-git
         )

sudo pacman   -S --needed ${pac_pkgs[@]}
yay           -S --needed ${yay_pkgs[@]}

# dwm
FILE=/usr/local/bin/dwm
if [ -f "$FILE" ]; then
  echo " dwm is already installed"
else
  echo "Installing dwm..."
  sudo pacman -S --needed xorg xorg-server xorg-xinit libx11 libxinerama libxft webkit2gtk
  LOCAL_REPO=$HOME/repos/dwm
  REPO_URL=https://github.com/mroavi/dwm.git
  git clone "$REPO_URL" "$LOCAL_REPO" 2> /dev/null || git -C "$LOCAL_REPO" pull
  cd $LOCAL_REPO
  sudo make clean install
fi

# slock
FILE=/usr/local/bin/slock
if [ -f "$FILE" ]; then
  echo " slock is already installed"
else
  echo "Installing slock..."
  LOCAL_REPO=$HOME/repos/slock
  REPO_URL=https://github.com/mroavi/slock.git
  git clone "$REPO_URL" "$LOCAL_REPO" 2> /dev/null || git -C "$LOCAL_REPO" pull
  cd $LOCAL_REPO
  git checkout mrv
  sudo make clean install
fi

# dwmblocks
FILE=/usr/local/bin/dwmblocks
if [ -f "$FILE" ]; then
  echo " dwmblocks is already installed"
else
  echo "Installing dwmblocks..."
  LOCAL_REPO=$HOME/repos/dwmblocks
  REPO_URL=https://github.com/mroavi/dwmblocks.git
  git clone "$REPO_URL" "$LOCAL_REPO" 2> /dev/null || git -C "$LOCAL_REPO" pull
  cd $LOCAL_REPO
  git checkout mrv
  sudo make clean install
fi

# pure
echo "Installing pure..."
mkdir -p ~/.zsh
LOCAL_REPO=$HOME/.zsh/pure
REPO_URL=https://github.com/mroavi/pure.git
git clone "$REPO_URL" "$LOCAL_REPO" 2> /dev/null || git -C "$LOCAL_REPO" pull

# julia (uses juliaup)
echo "Installing julia..."
curl -fsSL https://install.julialang.org | sh

# # Make zsh the default shell
# chsh -s $(which zsh)

# Create dotfile symlinks with stow
cd ~/dotfiles
stow alacritty git julia lf nvim scripts ssh tmux vim x xdg zsh

# Return to original directory
cd "$currentdir"
